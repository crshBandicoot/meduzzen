services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /db/database
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 1s
      timeout: 30s
      retries: 5
      start_period: 10s
  redis:
    image: redis
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 30s
      retries: 5
      start_period: 10s
  fastapiApp:
    image: 365834167077.dkr.ecr.eu-north-1.amazonaws.com/meduzzen:fastapiapp
    container_name: fastapiApp
    build:
      dockerfile: Dockerfile.Deploy
    ports:
      - ${APP_PORT}:${APP_PORT}
    env_file: .env
    healthcheck:
      test: curl localhost:8000
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy