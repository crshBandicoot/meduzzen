name: CI/CD Docker

on:
  push:
    branches:
      - develop
env:
  PYTHONPATH: ${{ secrets.PYTHONPATH }}
  POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  APP_PORT: ${{ secrets.APP_PORT }}
  APP_HOST: ${{ secrets.APP_HOST }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
  AUTH0_PUBLIC_URL: ${{ secrets.AUTH0_PUBLIC_URL }}

jobs:
  Integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Create env file
        run: |
          touch .env
          echo PYTHONPATH=$PYTHONPATH >> .env
          echo POSTGRES_URL=$POSTGRES_URL >> .env
          echo POSTGRES_PORT=$POSTGRES_PORT >> .env
          echo POSTGRES_DB=$POSTGRES_DB >> .env
          echo POSTGRES_USER=$POSTGRES_USER >> .env
          echo POSTGRES_PASSWORD=$POSTGRES_PASSWORD >> .env
          echo REDIS_URL=$REDIS_URL >> .env
          echo REDIS_PORT=$REDIS_PORT >> .env
          echo REDIS_PASSWORD=$REDIS_PASSWORD >> .env
          echo APP_PORT=$APP_PORT >> .env
          echo APP_HOST=$APP_HOST >> .env
          echo SECRET_KEY=$SECRET_KEY >> .env
          echo AUTH0_AUDIENCE=$AUTH0_AUDIENCE >> .env
          echo AUTH0_PUBLIC_URL=$AUTH0_PUBLIC_URL >> .env
      - name: Docker create containers
        run: |
          curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh
          sudo docker context create ecs mycontext <<< env

